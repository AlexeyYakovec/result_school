/*

Вам поручили задачу на проекте. Необходимо разработать словарь, в который можно добавлять слова с их описанием, удалять слова и получать их.

Для начала создайте класс Dictionary. Его конструктор принимает 1 параметр name.

Инициализируйте данное значение при помощи this. Также в конструкторе должно объявляться поле words, которое по умолчанию должно быть пустым объектом.

Вам необходимо в класс Dictionary добавить 4 метода:

add(). Данный метод добавляет новое слово в словарь. Он принимает в себя 2 параметра:
word - слово (тип данных строка).
description - описание слова (тип данных строка).
Присвойте объекту words по ключу word (этот параметр передали в метод add()) значение объекта, в котором будут храниться данные о слове и его описание. 
Пример объекта words после добавления слова "js":

// words
{ 	
    js: {
        word: 'js', 
        description: 'язык программирования', 	
    }
}
Если слово уже существует в объекте words, то не нужно перезаписывать слово, которое уже было сохранено ранее. То есть, если значение по ключу уже существует, то ничего не делаем.


remove() - данный метод удаляет слово из словаря. Он принимает в себя ключ, по которому нужно удалить объект слова из объекта words.
get - данный метод получает слово из словаря. Он принимает в себя ключ из объекта words. Из метода необходимо возвратить найденный объект слова по переданному параметру ключа.
showAllWords() - данный метод не принимает в себя никаких параметров. 
Его задача состоит в том, чтобы вывести все слова, которые есть в объекте words, в консоль в формате “word - description” (word - само слово, description - описание слова).
Для тестирования написанного класса используйте данный код:

const dictionary = new Dictionary('Толковый словарь');
dictionary.add('JavaScript', 'популярный язык программирования');
dictionary.add('Веб-разработчик', 'Человек, который создает новые сервисы и сайты или поддерживает и дополняет существующие');

dictionary.remove('JavaScript');
dictionary.showAllWords();
// Веб-разработчик - Человек, который создает новые сервисы и сайты или поддерживает // и дополняет существующие
Примечание: в JavaScript для добавления в объект по динамическому ключу мы можем использовать []. Например:

const obj = {};
const dynamicKey = 'name';
obj[dynamicKey] = 'Elena';

console.log(obj); // { name: 'Elena' }

*/

class Dictionary {
    constructor(name) {
        this.name = name;
        this.words = {};
    }
    add(word, description) {
        if (this.words[word] === undefined) {
            this.words[word] = { word, description };
        }
        return this.words;
    }
    remove(word) {
        delete this.words[word];
        return this.words;
    }
    get(word) {
        return this.words[word];
    }
    showAllWords() {
        console.log(Object.values(this.words));
    }
}

const dictionary = new Dictionary("Толковый словарь");
dictionary.add("JavaScript", "популярный язык программирования");
dictionary.add(
    "Веб-разработчик",
    "Человек, который создает новые сервисы и сайты или поддерживает и дополняет существующие",
);
dictionary.remove("JavaScript");
dictionary.showAllWords();
